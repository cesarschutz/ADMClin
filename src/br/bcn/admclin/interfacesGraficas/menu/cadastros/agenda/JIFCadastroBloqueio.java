package br.bcn.admclin.interfacesGraficas.menu.cadastros.agenda;

import java.awt.Dimension;
import java.awt.Insets;
import java.util.ArrayList;

import javax.swing.border.EmptyBorder;
import javax.swing.plaf.basic.BasicInternalFrameUI;
import javax.swing.table.DefaultTableModel;

import br.bcn.admclin.dao.dbris.NAGENDASDESC;
import br.bcn.admclin.dao.model.Nagenda;
import br.bcn.admclin.dao.model.Nagendasdesc;

import com.lowagie.text.List;

import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import javax.swing.GroupLayout.Alignment;
import javax.swing.GroupLayout;
import javax.swing.LayoutStyle.ComponentPlacement;


/**
 *
 * @author cesar
 */
public class JIFCadastroBloqueio extends javax.swing.JInternalFrame {
	
	ArrayList<Integer> listaHanldeAgendas = new ArrayList();
	int weekDay;
	int handle_agenda;
	
    /**
     * Creates new form JIFCadastroBloqueio
     */
    public JIFCadastroBloqueio() {
        initComponents();
        tirandoBarraDeTitulo();
        preenchherAgendas();
        jTable1.setRowHeight(25); 
    }
    
    private void preenchherAgendas(){
    	ArrayList<Nagendasdesc> listaAgendas = NAGENDASDESC.getConsultar();
        listaAgendas = NAGENDASDESC.getConsultar();
        listaHanldeAgendas.add(0);
        jCBAgendas.addItem("Agendas");
        for (int i = 0; i < listaAgendas.size() ; i++) {
            jCBAgendas.addItem(listaAgendas.get(i).getName());
            listaHanldeAgendas.add(listaAgendas.get(i).getNagdid());
        }
    }
    
    private void tirandoBarraDeTitulo() {
        ((BasicInternalFrameUI) this.getUI()).getNorthPane().setPreferredSize(new Dimension(0, 0));
        this.setBorder(new EmptyBorder(new Insets(0, 0, 0, 0)));
    }
    
    private void preencheTabela(){
    	jBPesquisar.setEnabled(false);
    	((DefaultTableModel) jTable1.getModel()).setNumRows(0);
        jTable1.updateUI();
        
    	//jogamos as informações na variavel local para usarmos para salvar ou deletar bloqueios
    	handle_agenda = listaHanldeAgendas.get(jCBAgendas.getSelectedIndex());
    	weekDay = getWeekDay();
    	ArrayList<Nagenda> listaTurno = NAGENDASDESC.getTurnosDaAgenda(handle_agenda);
    	for (Nagenda nagenda : listaTurno) {
    		if(nagenda.getWeekday() == weekDay){
    			int periodoDaAgenda = nagenda.getDuracao();
    			int start1 = nagenda.getStart1();
    			int end1 = nagenda.getEnd1();
    			int start2 = nagenda.getStart2();
    			int end2 = nagenda.getEnd2();
    			int start3 = nagenda.getStart3();
    			int end3 = nagenda.getEnd3();
    			int start4 = nagenda.getStart4();
    			int end4 = nagenda.getEnd4();
    			
    			if(start1 > 0) jogaTurnoNaTabela(start1, end1, periodoDaAgenda);
    			if(start2 > 0) jogaTurnoNaTabela(start2, end2, periodoDaAgenda);
    			if(start3 > 0) jogaTurnoNaTabela(start3, end3, periodoDaAgenda);
    			if(start4 > 0) jogaTurnoNaTabela(start4, end4, periodoDaAgenda);
    		}
    	}
    }
    
    private void jogaTurnoNaTabela(int start, int end, int duracaoAgenda){
    	DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
    	for (int j = start; j < end; j=j+duracaoAgenda) {
    		modelo.addRow(new String[] { converterMinutosParaHora(j) });
		}
    }
    
    public String converterMinutosParaHora(int minutosPraConverter) {
        String horas = String.valueOf(minutosPraConverter / 60);
        String minutos = String.valueOf(minutosPraConverter % 60);

        if (horas.length() < 2) {
            horas = "0" + horas;
        }

        if (minutos.length() < 2) {
            minutos = "0" + minutos;
        }

        return horas + ":" + minutos;
    }

    public int converterHoraEmMinutos(String hora) {
        String[] horaEMinutos = hora.split(":");

        int horas = Integer.valueOf(horaEMinutos[0]) * 60;
        int minutos = Integer.valueOf(horaEMinutos[1]);

        return horas + minutos;
    }
    
    private int getWeekDay(){
    	int indexComboBox = jCBDia.getSelectedIndex();
    	switch (indexComboBox) {
		case 0:
			return 2;
		case 1:
			return 3;
		case 2:
			return 4;
		case 3:
			return 5;
		case 4:
			return 6;
		case 5:
			return 7;
		case 6:
			return 1;
		default:
			return 0;
		}
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jCBAgendas = new javax.swing.JComboBox();
        jCBAgendas.addActionListener(new ActionListener() {
        	public void actionPerformed(ActionEvent arg0) {
        		jBPesquisar.setEnabled(true);
        	}
        });
        jCBDia = new javax.swing.JComboBox();
        jCBDia.addActionListener(new ActionListener() {
        	public void actionPerformed(ActionEvent e) {
        		jBPesquisar.setEnabled(true);
        	}
        });
        jBPesquisar = new javax.swing.JButton();
        jBPesquisar.addActionListener(new ActionListener() {
        	public void actionPerformed(ActionEvent arg0) {
        		if(jCBAgendas.getSelectedIndex() > 0){
        			preencheTabela();
        		}
        		
        	}
        });
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Cadastro de Bloqueios", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));

        jLabel1.setText("Agenda:");

        jLabel2.setText("Dia:");

        jCBDia.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Segunda-Feira", "Terça-Feira", "Quarta-Feira", "Quinta-Feira", "Sexta-Feira", "Sabado", "Domingo" }));

        jBPesquisar.setText("Pesquisar");

        jTable1.setModel(new DefaultTableModel(
        	new Object[][] {
        	},
        	new String[] {
        		"Horario", "Bloqueio"
        	}
        ));
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1Layout.setHorizontalGroup(
        	jPanel1Layout.createParallelGroup(Alignment.TRAILING)
        		.addGroup(jPanel1Layout.createSequentialGroup()
        			.addGroup(jPanel1Layout.createParallelGroup(Alignment.LEADING, false)
        				.addComponent(jLabel1, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        				.addComponent(jLabel2, GroupLayout.PREFERRED_SIZE, 41, GroupLayout.PREFERRED_SIZE))
        			.addPreferredGap(ComponentPlacement.RELATED)
        			.addGroup(jPanel1Layout.createParallelGroup(Alignment.TRAILING, false)
        				.addComponent(jScrollPane1, Alignment.LEADING, 0, 0, Short.MAX_VALUE)
        				.addComponent(jCBAgendas, Alignment.LEADING, 0, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        				.addComponent(jCBDia, Alignment.LEADING, 0, 216, Short.MAX_VALUE))
        			.addPreferredGap(ComponentPlacement.RELATED)
        			.addComponent(jBPesquisar, GroupLayout.PREFERRED_SIZE, 119, GroupLayout.PREFERRED_SIZE))
        );
        jPanel1Layout.setVerticalGroup(
        	jPanel1Layout.createParallelGroup(Alignment.LEADING)
        		.addGroup(jPanel1Layout.createSequentialGroup()
        			.addGroup(jPanel1Layout.createParallelGroup(Alignment.LEADING, false)
        				.addComponent(jBPesquisar, GroupLayout.DEFAULT_SIZE, 49, Short.MAX_VALUE)
        				.addGroup(jPanel1Layout.createSequentialGroup()
        					.addGroup(jPanel1Layout.createParallelGroup(Alignment.BASELINE)
        						.addComponent(jLabel1)
        						.addComponent(jCBAgendas, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
        					.addPreferredGap(ComponentPlacement.RELATED)
        					.addGroup(jPanel1Layout.createParallelGroup(Alignment.BASELINE)
        						.addComponent(jLabel2)
        						.addComponent(jCBDia, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))))
        			.addPreferredGap(ComponentPlacement.RELATED)
        			.addComponent(jScrollPane1, GroupLayout.PREFERRED_SIZE, 518, GroupLayout.PREFERRED_SIZE)
        			.addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1.setLayout(jPanel1Layout);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBPesquisar;
    private javax.swing.JComboBox jCBAgendas;
    private javax.swing.JComboBox jCBDia;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
